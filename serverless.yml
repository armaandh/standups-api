# The `service` block is the name of the service
service: serverless-auth

# Configuration variables
#custom:
  #secrets: ${file(env.json)}

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        #- "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/groups-table-3*"]]
  environment:
    #JWT_SECRET: ${self:custom.secrets.jwtSecret}
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}

# Lambda Functions Below Defined for Standup API
functions:
  getMembers:
    handler: functions/getMembers.handler
    events:
      - http:
          path: members
          method: get
          cors: true
          authorizer: aws_iam # Members are protected
  getMember:
    handler: functions/getMembers.handler
    events:
      - http:
          path: members/{id}
          method: get
          # request:
          #   parameters:
          #     paths:
          #       id: true
          cors: true
          authorizer: aws_iam # Members are protected

  getTeams:
    handler: functions/getTeams.handler
    events:
      - http:
          path: teams
          method: get
          cors: true
          authorizer: aws_iam # Teams are protected
  createTeam:
    handler: functions/createTeam.handler
    events:
      - http:
          path: teams
          method: post
          cors: true
          authorizer: aws_iam # Teams are protected
resources:
  Resources:
    StandupsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
